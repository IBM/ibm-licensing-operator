#
# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: kind

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 0 * * *"    
  push:
      branches:
        - master
        - development
jobs:
  scorecard:
    name: Scorecrd tests
    runs-on: ubuntu-18.04
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      run: |
        make build
        curl -Lo ./operator-sdk "https://github.com/operator-framework/operator-sdk/releases/download/v0.17.0/operator-sdk-v0.17.0-x86_64-linux-gnu"
        curl -Lo ./kind "https://kind.sigs.k8s.io/dl/v0.9.0/kind-$(uname)-amd64"
        chmod +x ./operator-sdk
        chmod +x ./kind
        ./kind create cluster --image kindest/node:v1.17.2
        ./kind get clusters
        kubectl config get-contexts
        kubectl config set-context kind-kind

    - name: Install OLM
      run: |
        kubectl apply -f https://github.com/operator-framework/operator-lifecycle-manager/releases/download/0.13.0/crds.yaml
        kubectl apply -f https://github.com/operator-framework/operator-lifecycle-manager/releases/download/0.13.0/olm.yaml
   
    - name: Deploy Operators YAML
      env:
        JSON_ARTIFACTORY: ${{ secrets.JSON_ARTIFACTORY }}
      run: |
        echo "$JSON_ARTIFACTORY" > ./artifactory.yaml
        kubectl create namespace ibm-common-services
        kubectl create secret generic my-registry-token -n ibm-common-services --from-file=.dockerconfigjson=./artifactory.yaml --type=kubernetes.io/dockerconfigjson
        kubectl apply -f ./config/crd/bases/operator.ibm.com_ibmlicenseservicereporters.yaml
        kubectl apply -f ./config/crd/bases/operator.ibm.com_ibmlicensings.yaml
        kubectl apply -f ./bundle/manifests/ibm-license-service_v1_serviceaccount.yaml  -n ibm-common-services
        kubectl apply -f ./bundle/manifests/ibm-licensing-operator_v1_serviceaccount.yaml  -n ibm-common-services
        kubectl apply -f ./config/rbac/role_binding.yaml -n ibm-common-services
        kubectl -n ibm-common-services patch serviceaccount ibm-licensing-operator -p '{"imagePullSecrets": [{"name": "my-registry-token"}]}'
        kubectl apply -f ./config/rbac/role.yaml
        kubectl apply -f ./config/rbac/role_binding.yaml
    - name: Run Scorecard tests
      run: |
        cp ./common/scripts/tests/.osdk-scorecard.yaml ./.osdk-scorecard.yaml
        export VERSION=1.4.1
        set -o pipefail
        ./operator-sdk scorecard namespace ibm-common-services --config ./.osdk-scorecard.yaml -b ./deploy-old/olm-catalog/ibm-licensing-operator/$VERSION/  --verbose 2>&1 | tee ./scorecard_logs.txt

    - name: Archive scorecard logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: scorecard results
        path: ./*.txt
    
     
  setup-build-publish-deploy:
    name: Operator tests on KinD
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        k8s: [v1.17.2, v1.18.2, v1.19.7, v1.20.2]
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Checkout
      uses: actions/checkout@v2

    - name: Download binaries
      env:
        JSON_ARTIFACTORY: ${{ secrets.JSON_ARTIFACTORY }}
      run: |
        wget https://github.com/kubernetes-sigs/kind/releases/download/v0.10.0/kind-linux-amd64
        mv ./kind-linux-amd64 ./kind
        chmod +x ./kind
        cp ./common/scripts/tests/kind_config.yaml ./
        echo "$JSON_ARTIFACTORY" > ./artifactory.yaml
        ./kind create cluster --image kindest/node:${{ matrix.k8s }} --config ./kind_config.yaml --name tests
        kubectl config set-context kind-tests        
        kubectl get nodes


    - name: Test Unit Operator - License Service
      run: |
        export PATH=`pwd`:$PATH
        export SUFIX=$RANDOM
        export USE_EXISTING_CLUSTER=true
        make unit-test > ./unittest_logs_${{ matrix.k8s }}.txt 2>&1

    - name: Check all pods
      if: always()
      run: |
        export PATH=`pwd`:$PATH
        kubectl config set-context kind-tests
        kubectl describe pods --all-namespaces  > ./pods_${{ matrix.k8s }}.txt 2>&1

    - name: Archive logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: operator results
        path: ./*.txt


