apiVersion: batch/v1
kind: Job
metadata:
  name: ibm-licensing-migration-job
  namespace: {{ .Values.ibmLicensing.namespace }}
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "3"
spec:
  template:
    spec:
      containers:
      - name: ibm-licensing-migration-job
        image: {{ .Values.global.imagePullPrefix }}/{{ .Values.ibmLicensing.imageRegistry }}/cpfs-utils:4.6.7
        command:
          - bash
          - -c
          - |
            echo "Starting cleanup for OLM -> No OLM migration..."

            namespace={{ .Values.ibmLicensing.namespace }}
            
            # Get names of resources that will be deleted
            subscription_names=$(oc get --ignore-not-found subscription.operators.coreos.com -n $namespace | grep ibm-licensing | awk '{print $1}' | tr "\n" " ")
            csv_names=$(oc get --ignore-not-found csv -n $namespace | grep ibm-licensing | awk '{print $1}' | tr "\n" " ")
            # Get OperatorGroups that have annotation key "olm.providedAPIs" and its corresponding value starts with "IBMLicensing..."
            operatorgroup_names=$(oc get --ignore-not-found operatorgroup -n ibm-licensing -o=jsonpath='{range .items[*]}{@.metadata.name}{" "}{@.metadata.annotations}{"\n"}{end}' | awk '{if ($2 ~ "\"olm.providedAPIs\":\"IBMLicensing.*") print $1}')

            if [[ -z $subscription_names ]]; then
              echo "No Subscription associated with ibm-licensing found in namespace $namespace." 
            else
              echo "Removing subscriptions."
              oc delete --ignore-not-found subscription.operators.coreos.com $subscription_names -n $namespace
            fi

            if [[ -z $csv_names ]]; then
              echo "No CSVs associated with ibm-licensing found in namespace $namespace." 
            else
              echo "Removing CSVs."
              oc delete --ignore-not-found csv $csv_names -n $namespace
            fi

            if [[ -z $operatorgroup_names ]]; then
              echo "No OperatorGroups associated with ibm-licensing found in namespace $namespace." 
            else
              echo "Removing OperatorGroups."
              oc delete --ignore-not-found operatorgroup $operatorgroup_names -n $namespace
            fi

            # Make sure rbac resources are deleted, even though they should be deleted automatically after removing CSV
            role_binding_names=$(oc get --ignore-not-found rolebinding -n $namespace | grep ibm-licensing | grep -v ibm-licensing-migration | awk '{print $1}' | tr "\n" " ")
            role_names=$(oc get --ignore-not-found --no-headers role -n $namespace | grep ibm-licensing | grep -v ibm-licensing-migration | awk '{print $1}' | tr "\n" " ")
            service_account_names=$(oc get --ignore-not-found --no-headers serviceaccount -n $namespace | grep -E "ibm-license|ibm-licensing" | grep -v ibm-licensing-migration | awk '{print $1}' | tr "\n" " ")

            if [[ -n $role_binding_names ]]; then
              oc delete --ignore-not-found rolebinding $role_binding_names -n $namespace
            fi

            if [[ -n $role_names ]]; then
              oc delete --ignore-not-found role $role_names -n $namespace
            fi

            if [[ -n $service_account_names ]]; then
              oc delete --ignore-not-found serviceaccount $service_account_names -n $namespace
            fi

      restartPolicy: Never
      serviceAccount: ibm-licensing-migration-job-sa
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}